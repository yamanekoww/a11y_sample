(function(e){e.fn.tile=function(t){var n,r,i,s,o,u,a=document.body.style,f=["height"],l=this.length-1;if(!t)t=this.length;u=a.removeProperty?a.removeProperty:a.removeAttribute;return this.each(function(){u.apply(this.style,f)}).each(function(u){s=u%t;if(s==0)n=[];r=n[s]=e(this);o=r.css("box-sizing")=="border-box"?r.outerHeight():r.innerHeight();if(s==0||o>i)i=o;if(u==l||s==t-1){e.each(n,function(){this.css("height",i)})}})}})(jQuery)


if ( $('[data-tile]').length ) {
	$(window).load(function(){ pluginTileJs(); });
}

function pluginTileJs() {
	//デバイス判定
	$('[data-tile]').each(function(){
		var $this = $(this),
			// tile = $this.attr('data-gs') / $this.children().attr('data-gs-col'),
			tileItem = $this.attr('data-tile'),
			widthP = $this.width();

		//アイテムの指定がなければ、直下の子要素の高さを揃える
		if ( tileItem.length ) {
			var widthC = $(tileItem).width(),
				tile 　=　Math.floor( widthP / widthC );

			$this.find(tileItem).tile(tile).addClass('is-addTile');
		}
		else {
			var widthC = $this.children().width(),
				tile 　=　Math.floor( widthP / widthC );

			$this.children().tile(tile).addClass('is-addTile');
		}
	});
}


/*------------------------------------------------------------------------------
親要素に[data-tile]を指定すれば直下の子要素の高さが揃います。
[data-tile]に高さを指定したい要素を指定することができます。

例)
data-tile="data-tile-item"

※対象の要素の横幅を基準に、カラム数を判断し、カラム数に応じた行ごとの高さを揃えていきます。

<div data-tile="">
	<div>
		<p data-tile-item>使い方</p>
	</div>
	<div>
		<p data-tile-item>使い方</p>
	</div>
</div>
------------------------------------------------------------------------------*/
